package cwst.com;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

import javax.mail.MessagingException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.test.context.junit4.SpringRunner;

import cwst.com.entities.CwstCaseDetail;
import cwst.com.entities.CwstSendmail;
import cwst.com.services.CrdDetailService;
import cwst.com.services.CwstCaseDetailService;
import cwst.com.services.CwstSendmailService;
import cwst.com.services.CwstSentmailService;

@RunWith(SpringRunner.class)
@SpringBootTest
public class CwSupportToolApplicationTests {
	@Autowired
	private CwstSendmailService cwstSendmailService;
	private static final List<String> CASE_REMIND = Arrays.asList("REMIND");
	@Autowired
	private JavaMailSender javaMailSender;
	@Autowired
	private CwstCaseDetailService cwstCaseDetailService;
	@Autowired
	private CwstSentmailService cwstSentmailService;

	@Test
	public void contextLoads() {
		final DateFormat format = new SimpleDateFormat("yyyyMMdd");
		final Date today = Calendar.getInstance().getTime();
		final String sFormat = "20170221" + "000000000";

		List<CwstSendmail> result = cwstSendmailService.findAllByMailtypeIn(CASE_REMIND).stream()
				.filter(s -> s.getId().getCreTms() < Long.parseLong(sFormat)).collect(Collectors.toList());
		result.forEach(s -> {
			final CwstCaseDetail cwstCaseDetail = cwstCaseDetailService.findOneByIdCaseId(s.getId().getCaseId());
			//@formatter:off
			final String sEmailContent = String.format(
					"Creation User: %s <br/>" + 
				    "Creation Time: %s <br/>" + 
					"Customer Name: %s <br/>" + 
				    "CIF: %s <br/>" + 
					"Case Type: %s <br/>"+ 
				    "Description:%s <br/>" + 
					"Result: %s <br/>" + 
				    "Content: %s",
		    // @formatter:on
					cwstCaseDetail.getCreUser(), cwstCaseDetail.getCreTms(), cwstCaseDetail.getCustName(), cwstCaseDetail.getCif(),
					cwstCaseDetail.getCaseType(), cwstCaseDetail.getDescription(), cwstCaseDetail.getCaseResult(), s.getMailcontent());
			sendMail(s.getMailto(), sEmailContent, s.getMailtitle());
			if (CASE_REMIND.contains(s.getMailtype())) {
				cwstSentmailService.save(s.getId().getCaseId(), s.getMailtype(),s.getMailcontent());
				cwstSendmailService.delete(s.getId().getCaseId(), s.getMailtype());
			}
		});
	}

	private void sendMail(final String address, final String content, final String subject) {

		MimeMessage mail = javaMailSender.createMimeMessage();
		try {
			MimeMessageHelper helper = new MimeMessageHelper(mail);
			// address String to String []
			helper.setTo("chautk@scb.com.vn");
			helper.setFrom(new InternetAddress("noreply@scb.com.vn"));
			helper.setBcc(new String[] { "chautk@scb.com.vn" });
			helper.setReplyTo(new InternetAddress("noreply@scb.com.vn"));
			helper.setSubject(subject);
			helper.setText(content, true);
			javaMailSender.send(mail);
		} catch (MessagingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
